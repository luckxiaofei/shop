{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js!/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/sys/notice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/sys/notice.vue","mtime":1585976621989},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime-corejs2/helpers/createForOfIteratorHelper\"));\n\nvar _notice = require(\"@/api/notice\");\n\nvar _BackToTop = _interopRequireDefault(require(\"@/components/BackToTop\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _tinymceVue = _interopRequireDefault(require(\"@tinymce/tinymce-vue\"));\n\nvar _storage = require(\"@/api/storage\");\n\nvar _auth = require(\"@/utils/auth\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'Notice',\n  components: {\n    BackToTop: _BackToTop.default,\n    Pagination: _Pagination.default,\n    Editor: _tinymceVue.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        title: undefined,\n        content: undefined,\n        sort: 'add_time',\n        order: 'desc'\n      },\n      multipleSelection: [],\n      contentDetail: '',\n      contentDialogVisible: false,\n      dataForm: {\n        id: undefined,\n        title: undefined,\n        content: undefined\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '创建'\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '通知标题不能为空',\n          trigger: 'blur'\n        }]\n      },\n      editorInit: {\n        language: 'zh_CN',\n        height: 200,\n        convert_urls: false,\n        plugins: ['advlist anchor autolink autosave code codesample colorpicker colorpicker contextmenu directionality emoticons fullscreen hr image imagetools importcss insertdatetime link lists media nonbreaking noneditable pagebreak paste preview print save searchreplace spellchecker tabfocus table template textcolor textpattern visualblocks visualchars wordcount'],\n        toolbar: ['searchreplace bold italic underline strikethrough alignleft aligncenter alignright outdent indent  blockquote undo redo removeformat subscript superscript code codesample', 'hr bullist numlist link image charmap preview anchor pagebreak insertdatetime media table emoticons forecolor backcolor fullscreen'],\n        images_upload_handler: function images_upload_handler(blobInfo, success, failure) {\n          var formData = new FormData();\n          formData.append('file', blobInfo.blob());\n          (0, _storage.createStorage)(formData).then(function (res) {\n            success(res.data.data.url);\n          }).catch(function () {\n            failure('上传失败，请重新上传');\n          });\n        }\n      },\n      downloadLoading: false\n    };\n  },\n  computed: {\n    headers: function headers() {\n      return {\n        'X-Litemall-Admin-Token': (0, _auth.getToken)()\n      };\n    }\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _notice.listNotice)(this.listQuery).then(function (response) {\n        _this.list = response.data.data.list;\n        _this.total = response.data.data.total;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.list = [];\n        _this.total = 0;\n        _this.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    resetForm: function resetForm() {\n      this.dataForm = {\n        id: undefined,\n        title: undefined,\n        content: undefined\n      };\n    },\n    handleCreate: function handleCreate() {\n      var _this2 = this;\n\n      this.resetForm();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].clearValidate();\n      });\n    },\n    createData: function createData() {\n      var _this3 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _notice.createNotice)(_this3.dataForm).then(function (response) {\n            _this3.list.unshift(response.data.data);\n\n            _this3.dialogFormVisible = false;\n\n            _this3.$notify.success({\n              title: '成功',\n              message: '创建成功'\n            });\n          }).catch(function (response) {\n            _this3.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this4 = this;\n\n      this.dataForm = Object.assign({}, row);\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this4.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this5 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _notice.updateNotice)(_this5.dataForm).then(function () {\n            var _iterator = (0, _createForOfIteratorHelper2.default)(_this5.list),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var v = _step.value;\n\n                if (v.id === _this5.dataForm.id) {\n                  var index = _this5.list.indexOf(v);\n\n                  _this5.list.splice(index, 1, _this5.dataForm);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _this5.dialogFormVisible = false;\n\n            _this5.$notify.success({\n              title: '成功',\n              message: '更新广告成功'\n            });\n          }).catch(function (response) {\n            _this5.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      (0, _notice.deleteNotice)(row).then(function (response) {\n        _this6.$notify.success({\n          title: '成功',\n          message: '删除通知成功'\n        });\n\n        var index = _this6.list.indexOf(row);\n\n        _this6.list.splice(index, 1);\n      }).catch(function (response) {\n        _this6.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    showContent: function showContent(content) {\n      this.contentDetail = content;\n      this.contentDialogVisible = true;\n    },\n    handleBatchDelete: function handleBatchDelete() {\n      var _this7 = this;\n\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录');\n        return;\n      }\n\n      var ids = [];\n\n      _lodash.default.forEach(this.multipleSelection, function (item) {\n        ids.push(item.id);\n      });\n\n      (0, _notice.batchDeleteNotice)({\n        ids: ids\n      }).then(function (response) {\n        _this7.$notify.success({\n          title: '成功',\n          message: '批量删除通知成功'\n        });\n\n        _this7.getList();\n      }).catch(function (response) {\n        _this7.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this8 = this;\n\n      this.downloadLoading = true;\n      Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/vendor/Export2Excel'));\n      }).then(function (excel) {\n        var tHeader = ['通知ID', '通知标题', '管理员ID', '添加时间', '更新时间'];\n        var filterVal = ['id', 'title', 'content', 'adminId', 'addTime', 'updateTime'];\n        excel.export_json_to_excel2(tHeader, _this8.list, filterVal, '通知');\n        _this8.downloadLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}