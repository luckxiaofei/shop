{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js!/Users/luck/shop/admin_web/node_modules/eslint-loader/index.js??ref--13-0!/Users/luck/shop/admin_web/src/permission.js","dependencies":[{"path":"/Users/luck/shop/admin_web/src/permission.js","mtime":1585976621951},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@/utils/auth\");\n\n// progress bar\n// progress bar style\n// getToken from cookie\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n// permission judge function\n\n\nfunction hasPermission(perms, permissions) {\n  if (perms.indexOf('*') >= 0) return true; // admin permission passed directly\n\n  if (!permissions) return true;\n  return perms.some(function (perm) {\n    return permissions.indexOf(perm) >= 0;\n  });\n}\n\nvar whiteList = ['/login', '/auth-redirect']; // no redirect whitelist\n\n_router.default.beforeEach(function (to, from, next) {\n  _nprogress.default.start(); // start progress bar\n\n\n  if ((0, _auth.getToken)()) {\n    // determine if there has token\n\n    /* has token*/\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n\n      _nprogress.default.done(); // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\n\n    } else {\n      if (_store.default.getters.perms.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        _store.default.dispatch('GetUserInfo').then(function (res) {\n          // 拉取user_info\n          var perms = res.data.data.perms; // note: perms must be a array! such as: ['GET /aaa','POST /bbb']\n\n          _store.default.dispatch('GenerateRoutes', {\n            perms: perms\n          }).then(function () {\n            // 根据perms权限生成可访问的路由表\n            _router.default.addRoutes(_store.default.getters.addRouters); // 动态添加可访问路由表\n\n\n            next((0, _objectSpread2.default)((0, _objectSpread2.default)({}, to), {}, {\n              replace: true\n            })); // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n          });\n        }).catch(function (err) {\n          _store.default.dispatch('FedLogOut').then(function () {\n            _elementUi.Message.error(err || 'Verification failed, please login again');\n\n            next({\n              path: '/'\n            });\n          });\n        });\n      } else {\n        // 没有动态改变权限的需求可直接next() 删除下方权限判断 ↓\n        if (hasPermission(_store.default.getters.perms, to.meta.perms)) {\n          next();\n        } else {\n          next({\n            path: '/401',\n            replace: true,\n            query: {\n              noGoBack: true\n            }\n          });\n        } // 可删 ↑\n\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next(\"/login?redirect=\".concat(to.path)); // 否则全部重定向到登录页\n\n      _nprogress.default.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n\n    }\n  }\n});\n\n_router.default.afterEach(function () {\n  _nprogress.default.done(); // finish progress bar\n\n});",null]}