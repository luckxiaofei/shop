{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js!/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/profile/notice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/profile/notice.vue","mtime":1585976621980},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _profile = require(\"@/api/profile\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'AdminNotice',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        title: '',\n        type: 'unread',\n        sort: 'add_time',\n        order: 'desc'\n      },\n      multipleSelection: [],\n      notice: {\n        title: '',\n        source: '',\n        content: '',\n        addTime: ''\n      },\n      noticeVisible: false\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _profile.listNotice)(this.listQuery).then(function (response) {\n        _this.list = response.data.data.list;\n        _this.total = response.data.data.total;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.list = [];\n        _this.total = 0;\n        _this.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleDelete: function handleDelete(row) {\n      var _this2 = this;\n\n      (0, _profile.rmNotice)(row).then(function (response) {\n        _this2.$notify.success({\n          title: '成功',\n          message: '删除通知成功'\n        });\n\n        var index = _this2.list.indexOf(row);\n\n        _this2.list.splice(index, 1);\n      }).catch(function (response) {\n        _this2.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    handleBatchDelete: function handleBatchDelete() {\n      var _this3 = this;\n\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录');\n        return;\n      }\n\n      var ids = [];\n\n      _lodash.default.forEach(this.multipleSelection, function (item) {\n        ids.push(item.id);\n      });\n\n      (0, _profile.brmNotice)({\n        ids: ids\n      }).then(function (response) {\n        _this3.$notify.success({\n          title: '成功',\n          message: '批量删除通知成功'\n        });\n\n        _this3.getList();\n      }).catch(function (response) {\n        _this3.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleRead: function handleRead(row) {\n      var _this4 = this;\n\n      (0, _profile.catNotice)(row).then(function (response) {\n        _this4.notice = response.data.data;\n        _this4.noticeVisible = true;\n      });\n    },\n    afterRead: function afterRead() {\n      this.noticeVisible = false;\n      this.getList();\n    },\n    handleBatchRead: function handleBatchRead() {\n      var _this5 = this;\n\n      if (this.multipleSelection.length === 0) {\n        this.$message.error('请选择至少一条记录');\n        return;\n      }\n\n      var ids = [];\n\n      _lodash.default.forEach(this.multipleSelection, function (item) {\n        ids.push(item.id);\n      });\n\n      (0, _profile.bcatNotice)({\n        ids: ids\n      }).then(function (response) {\n        _this5.$notify.success({\n          title: '成功',\n          message: '批量设置通知已读成功'\n        });\n\n        _this5.getList();\n      }).catch(function (response) {\n        _this5.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",null]}