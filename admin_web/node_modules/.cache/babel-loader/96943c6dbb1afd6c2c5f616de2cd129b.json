{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js!/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/promotion/scoreRule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/promotion/scoreRule.vue","mtime":1585976621984},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime-corejs2/helpers/createForOfIteratorHelper\"));\n\nvar _userProperty = require(\"@/api/userProperty\");\n\nvar _BackToTop = _interopRequireDefault(require(\"@/components/BackToTop\"));\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'ScoreRule',\n  components: {\n    BackToTop: _BackToTop.default,\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        ruleType: undefined,\n        sort: 'add_time',\n        order: 'desc'\n      },\n      downloadLoading: false,\n      dataForm: {\n        id: undefined,\n        score: '',\n        type: '',\n        typeName: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '创建'\n      },\n      //类型（1分享群，2分享好友，3浏览商品，4广告）\n      ruleTypeMap: {\n        1: '分享群',\n        2: '分享好友',\n        3: '浏览商品',\n        4: '广告'\n      },\n      ruleTypeOptions: [{\n        value: '1',\n        label: '分享群'\n      }, {\n        value: '2',\n        label: '分享好友'\n      }, {\n        value: '3',\n        label: '浏览商品'\n      }, {\n        value: '4',\n        label: '广告'\n      }],\n      rules: {\n        goodsId: [{\n          required: true,\n          message: '商品不能为空',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '团购折扣不能为空',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '团购人数不能为空',\n          trigger: 'blur'\n        }],\n        expireTime: [{\n          required: true,\n          message: '过期时间不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _userProperty.listRule)(this.listQuery).then(function (response) {\n        _this.list = response.data.data.list;\n        _this.total = response.data.data.total;\n        _this.listLoading = false;\n      }).catch(function () {\n        _this.list = [];\n        _this.total = 0;\n        _this.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    resetForm: function resetForm() {\n      this.dataForm = {\n        id: undefined,\n        goodsId: '',\n        score: '',\n        type: '',\n        expireTime: undefined\n      };\n    },\n    // handleCreate() {\n    //     this.resetForm()\n    //     this.dialogStatus = 'create'\n    //     this.dialogFormVisible = true\n    //     this.$nextTick(() => {\n    //         this.$refs['dataForm'].clearValidate()\n    //     })\n    // },\n    // createData() {\n    //     this.$refs['dataForm'].validate((valid) => {\n    //         if (valid) {\n    //             publishGroupon(this.dataForm).then(response => {\n    //                 this.list.unshift(response.data.data)\n    //                 this.dialogFormVisible = false\n    //                 this.$notify.success({\n    //                     title: '成功',\n    //                     message: '创建团购规则成功'\n    //                 })\n    //             }).catch(response => {\n    //                 this.$notify.error({\n    //                     title: '失败',\n    //                     message: response.data.errmsg\n    //                 })\n    //             })\n    //         }\n    //     })\n    // },\n    handleUpdate: function handleUpdate(row) {\n      var _this2 = this;\n\n      this.dataForm = Object.assign({}, row);\n      this.dataForm.typeName = this.ruleTypeMap[row.type];\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this3 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _userProperty.updateRule)(_this3.dataForm).then(function () {\n            var _iterator = (0, _createForOfIteratorHelper2.default)(_this3.list),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var v = _step.value;\n\n                if (v.id === _this3.dataForm.id) {\n                  var index = _this3.list.indexOf(v);\n\n                  _this3.list.splice(index, 1, _this3.dataForm);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _this3.dialogFormVisible = false;\n\n            _this3.$notify.success({\n              title: '成功',\n              message: '更新积分规则成功'\n            });\n          }).catch(function (response) {\n            _this3.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    } // handleDelete(row) {\n    //     deleteGroupon(row).then(response => {\n    //         this.$notify.success({\n    //             title: '成功',\n    //             message: '删除团购规则成功'\n    //         })\n    //         const index = this.list.indexOf(row)\n    //         this.list.splice(index, 1)\n    //     }).catch(response => {\n    //         this.$notify.error({\n    //             title: '失败',\n    //             message: response.data.errmsg\n    //         })\n    //     })\n    // },\n    // handleDownload() {\n    //     this.downloadLoading = true\n    //     import('@/vendor/Export2Excel').then(excel => {\n    //         const tHeader = ['商品ID', '名称', '首页主图', '折扣', '人数要求', '活动开始时间', '活动结束时间']\n    //         const filterVal = ['id', 'name', 'pic_url', 'score', 'type', 'addTime', 'expireTime']\n    //         excel.export_json_to_excel2(tHeader, this.list, filterVal, '商品信息')\n    //         this.downloadLoading = false\n    //     })\n    // }\n\n  }\n};\nexports.default = _default;",null]}