{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js!/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/sys/admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/sys/admin.vue","mtime":1585976621988},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"/Users/luck/shop/admin_web/node_modules/@babel/runtime-corejs2/helpers/createForOfIteratorHelper\"));\n\nvar _admin = require(\"@/api/admin\");\n\nvar _role = require(\"@/api/role\");\n\nvar _storage = require(\"@/api/storage\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Secondary package based on el-pagination\nvar _default = {\n  name: 'Admin',\n  components: {\n    Pagination: _Pagination.default\n  },\n  data: function data() {\n    return {\n      uploadPath: _storage.uploadPath,\n      list: null,\n      total: 0,\n      roleOptions: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        username: undefined,\n        sort: 'add_time',\n        order: 'desc'\n      },\n      dataForm: {\n        id: undefined,\n        username: undefined,\n        password: undefined,\n        avatar: undefined,\n        roleIds: []\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '创建'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '管理员名称不能为空',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'blur'\n        }]\n      },\n      downloadLoading: false\n    };\n  },\n  computed: {\n    headers: function headers() {\n      return {\n        'X-Litemall-Admin-Token': (0, _auth.getToken)()\n      };\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    (0, _role.roleOptions)().then(function (response) {\n      _this.roleOptions = response.data.data.list;\n    });\n  },\n  methods: {\n    formatRole: function formatRole(roleId) {\n      for (var i = 0; i < this.roleOptions.length; i++) {\n        if (roleId === this.roleOptions[i].value) {\n          return this.roleOptions[i].label;\n        }\n      }\n\n      return '';\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      (0, _admin.listAdmin)(this.listQuery).then(function (response) {\n        _this2.list = response.data.data.list;\n        _this2.total = response.data.data.total;\n        _this2.listLoading = false;\n      }).catch(function () {\n        _this2.list = [];\n        _this2.total = 0;\n        _this2.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    resetForm: function resetForm() {\n      this.dataForm = {\n        id: undefined,\n        username: undefined,\n        password: undefined,\n        avatar: undefined,\n        roleIds: []\n      };\n    },\n    uploadAvatar: function uploadAvatar(response) {\n      this.dataForm.avatar = response.data.url;\n    },\n    handleCreate: function handleCreate() {\n      var _this3 = this;\n\n      this.resetForm();\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    createData: function createData() {\n      var _this4 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _admin.createAdmin)(_this4.dataForm).then(function (response) {\n            _this4.list.unshift(response.data.data);\n\n            _this4.dialogFormVisible = false;\n\n            _this4.$notify.success({\n              title: '成功',\n              message: '添加管理员成功'\n            });\n          }).catch(function (response) {\n            _this4.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleUpdate: function handleUpdate(row) {\n      var _this5 = this;\n\n      this.dataForm = Object.assign({}, row);\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n      this.$nextTick(function () {\n        _this5.$refs['dataForm'].clearValidate();\n      });\n    },\n    updateData: function updateData() {\n      var _this6 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          (0, _admin.updateAdmin)(_this6.dataForm).then(function () {\n            var _iterator = (0, _createForOfIteratorHelper2.default)(_this6.list),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var v = _step.value;\n\n                if (v.id === _this6.dataForm.id) {\n                  var index = _this6.list.indexOf(v);\n\n                  _this6.list.splice(index, 1, _this6.dataForm);\n\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            _this6.dialogFormVisible = false;\n\n            _this6.$notify.success({\n              title: '成功',\n              message: '更新管理员成功'\n            });\n          }).catch(function (response) {\n            _this6.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            });\n          });\n        }\n      });\n    },\n    handleDelete: function handleDelete(row) {\n      var _this7 = this;\n\n      (0, _admin.deleteAdmin)(row).then(function (response) {\n        _this7.$notify.success({\n          title: '成功',\n          message: '删除管理员成功'\n        });\n\n        var index = _this7.list.indexOf(row);\n\n        _this7.list.splice(index, 1);\n      }).catch(function (response) {\n        _this7.$notify.error({\n          title: '失败',\n          message: response.data.errmsg\n        });\n      });\n    },\n    handleDownload: function handleDownload() {\n      var _this8 = this;\n\n      this.downloadLoading = true;\n      Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/vendor/Export2Excel'));\n      }).then(function (excel) {\n        var tHeader = ['管理员ID', '管理员名称', '管理员头像'];\n        var filterVal = ['id', 'username', 'avatar'];\n        excel.export_json_to_excel2(tHeader, _this8.list, filterVal, '管理员信息');\n        _this8.downloadLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}