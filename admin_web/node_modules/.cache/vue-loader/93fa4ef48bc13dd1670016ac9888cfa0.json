{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/goods/create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/goods/create.vue","mtime":1585976621968},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {publishGoods, listCatAndBrand} from '@/api/goods'\nimport {createStorage, uploadPath} from '@/api/storage'\nimport Editor from '@tinymce/tinymce-vue'\nimport {MessageBox} from 'element-ui'\nimport {getToken} from '@/utils/auth'\n\n\nexport default {\n    name: 'GoodsCreate',\n    components: {Editor},\n\n    data() {\n        return {\n            uploadPath,\n            newKeywordVisible: false,\n            newKeyword: '',\n            keywords: [],\n            categoryList: [],\n            brandList: [],\n            goods: {picUrl: '', gallery: [], isHot: false, isNew: true, isOnSale: true, isConvert: false},\n            specVisiable: false,\n            specForm: {specification: '', picUrl: ''},\n            specifications: [{specification: '标准', picUrl: ''}],\n            productVisiable: false,\n            productForm: {specification: '', number: 0, url: ''},\n            products: [{specification: '标准',number: 0}],\n            attributeVisiable: false,\n            attributeForm: {attribute: '', value: ''},\n            attributes: [],\n            rules: {\n                goodsSn: [{required: true, message: '商品编号不能为空', trigger: 'blur'}],\n                name: [{required: true, message: '商品名称不能为空', trigger: 'blur'}],\n                counterPrice: [{required: true, message: '原价不能为空', trigger: 'blur'}],\n                retailPrice: [{required: true, message: '实际销售价不能为空', trigger: 'blur'}],\n                convertScore: [{required: true, message: '兑换所需青豆不能为空', trigger: 'blur'}],\n                giveScore: [{required: true, message: '购买商品赠送青豆不能为空', trigger: 'blur'}],\n                commission: [{required: true, message: '购买商品返上级佣金不能为空', trigger: 'blur'}],\n                picUrl: [{required: true, message: '商品图片不能为空', trigger: 'blur'}],\n                gallery: [{required: true, message: '宣传画廊不能为空', trigger: 'blur'}],\n                unit: [{required: true, message: '商品单位不能为空', trigger: 'blur'}],\n                categoryId: [{required: true, message: '所属分类不能为空', trigger: 'blur'}],\n                brief: [{required: true, message: '所属分类不能为空', trigger: 'blur'}],\n            },\n            // specForm\n            specRules: {\n                specification: [{required: true, message: '规格名不能为空', trigger: 'blur'}],\n\n            },\n            //productForm\n            productRules: {\n                specification: [{required: true, message: '规格名不能为空', trigger: 'blur'}],\n                number: [{required: true, message: '货品数量不能为空', trigger: 'blur'}],\n            },\n            //attributeForm\n            attributeRules: {\n                attribute: [{required: true, message: '商品参数名称不能为空', trigger: 'blur'}],\n                value: [{required: true, message: '商品参数值不能为空', trigger: 'blur'}],\n            },\n            editorInit: {\n                language: 'zh_CN',\n                height: 500,\n                convert_urls: false,\n                plugins: ['advlist anchor autolink autosave code codesample colorpicker colorpicker contextmenu directionality emoticons fullscreen hr image imagetools importcss insertdatetime link lists media nonbreaking noneditable pagebreak paste preview print save searchreplace spellchecker tabfocus table template textcolor textpattern visualblocks visualchars wordcount'],\n                toolbar: ['searchreplace bold italic underline strikethrough alignleft aligncenter alignright outdent indent  blockquote undo redo removeformat subscript superscript code codesample', 'hr bullist numlist link image charmap preview anchor pagebreak insertdatetime media table emoticons forecolor backcolor fullscreen'],\n                images_upload_handler: function (blobInfo, success, failure) {\n                    const formData = new FormData()\n                    formData.append('file', blobInfo.blob())\n                    createStorage(formData).then(res => {\n                        success(res.data.data.url)\n                    }).catch(() => {\n                        failure('上传失败，请重新上传')\n                    })\n                }\n            }\n        }\n    },\n    computed: {\n        headers() {\n            return {\n                'X-Litemall-Admin-Token': getToken()\n            }\n        }\n    },\n    created() {\n        this.init()\n    },\n\n\n    methods: {\n        init: function () {\n            listCatAndBrand().then(response => {\n                this.categoryList = response.data.data.categoryList\n                this.brandList = response.data.data.brandList\n            })\n        },\n        handleCategoryChange(value) {\n            this.goods.categoryId = value[value.length - 1]\n        },\n        handleCancel: function () {\n            this.$router.push({path: '/goods/goods'})\n        },\n        handlePublish: function () {\n            const finalGoods = {\n                goods: this.goods,\n                specifications: this.specifications,\n                products: this.products,\n                attributes: this.attributes\n            }\n            if (this.specifications.length < 1) {\n                MessageBox.alert('请添加商品规格', '警告', {\n                    confirmButtonText: '确定',\n                    type: 'error'\n                })\n                return\n            }\n            if (this.products.length < 1) {\n                MessageBox.alert('请添加商品库存', '警告', {\n                    confirmButtonText: '确定',\n                    type: 'error'\n                })\n                return\n            }\n            this.$refs['goods'].validate(valid => {\n                if (valid) {\n                    publishGoods(finalGoods).then(response => {\n                        this.$notify.success({\n                            title: '成功',\n                            message: '创建成功'\n                        })\n                        this.$router.push({path: '/goods/list'})\n                    }).catch(response => {\n                        MessageBox.alert('业务错误：' + response.data.errmsg, '警告', {\n                            confirmButtonText: '确定',\n                            type: 'error'\n                        })\n                    })\n                }\n            })\n\n        },\n        handleClose(tag) {\n            this.keywords.splice(this.keywords.indexOf(tag), 1)\n            this.goods.keywords = this.keywords.toString()\n        },\n        showInput() {\n            this.newKeywordVisible = true\n            this.$nextTick(_ => {\n                this.$refs.newKeywordInput.$refs.input.focus()\n            })\n        },\n        handleInputConfirm() {\n            const newKeyword = this.newKeyword\n            if (newKeyword) {\n                this.keywords.push(newKeyword)\n                this.goods.keywords = this.keywords.toString()\n            }\n            this.newKeywordVisible = false\n            this.newKeyword = ''\n        },\n        uploadPicUrl: function (response) {\n            this.goods.picUrl = response.data.url\n        },\n        uploadOverrun: function () {\n            this.$message({\n                type: 'error',\n                message: '上传文件个数超出限制!最多上传5张图片!'\n            })\n        },\n        handleGalleryUrl(response, file, fileList) {\n            if (response.errno === 0) {\n                this.goods.gallery.push(response.data.url)\n            }\n        },\n        handleRemove: function (file, fileList) {\n            for (var i = 0; i < this.goods.gallery.length; i++) {\n                // 这里存在两种情况\n                // 1. 如果所删除图片是刚刚上传的图片，那么图片地址是file.response.data.url\n                //    此时的file.url虽然存在，但是是本机地址，而不是远程地址。\n                // 2. 如果所删除图片是后台返回的已有图片，那么图片地址是file.url\n                var url\n                if (file.response === undefined) {\n                    url = file.url\n                } else {\n                    url = file.response.data.url\n                }\n\n                if (this.goods.gallery[i] === url) {\n                    this.goods.gallery.splice(i, 1)\n                }\n            }\n        },\n        uploadSpecPicUrl: function (response) {\n            this.specForm.picUrl = response.data.url\n        },\n        handleSpecificationShow() {\n            this.specForm = {specification: '', value: '', picUrl: ''}\n            this.specVisiable = true\n        },\n        handleSpecificationAdd() {\n            this.$refs['specForm'].validate(valid => {\n                if (valid) {\n                    var index = this.specifications.length - 1\n                    for (var i = 0; i < this.specifications.length; i++) {\n                        const v = this.specifications[i]\n                        if (v.specification === this.specForm.specification) {\n                            this.$message({\n                                type: 'warning',\n                                message: '已经存在规格值:' + v.specification\n                            })\n                            this.specForm = {}\n                            this.specVisiable = false\n                        }\n                    }\n\n                    this.specifications.push(this.specForm)\n                    this.specVisiable = false\n\n                    this.specToProduct()\n                }\n            })\n        },\n        handleSpecificationDelete(row) {\n            const index = this.specifications.indexOf(row)\n            this.specifications.splice(index, 1)\n            this.specToProduct()\n        },\n        specToProduct() {\n            if (this.specifications.length === 0) {\n                this.products = []\n                return\n            }\n            let specifications = this.specifications;\n            var products = []\n            for (let i = 0; i < specifications.length; i++) {\n                var spec = this.specifications[i]\n                products[i] = {specification: spec.specification, number: 0}\n            }\n            this.products = products\n        },\n        handleProductShow(row) {\n            this.productForm = Object.assign({}, row)\n            this.productVisiable = true\n        },\n        uploadProductUrl: function (response) {\n            this.productForm.url = response.data.url\n        },\n        handleProductEdit() {\n            this.$refs['productForm'].validate(valid => {\n                if (valid) {\n                    for (var i = 0; i < this.products.length; i++) {\n                        const v = this.products[i]\n                        if (v.specification === this.productForm.specification) {\n                            this.products.splice(i, 1, this.productForm)\n                            break\n                        }\n                    }\n                    this.productVisiable = false\n                }\n            })\n        },\n        handleAttributeShow() {\n            this.attributeForm = {}\n            this.attributeVisiable = true\n        },\n        handleAttributeAdd() {\n            this.$refs['attributeForm'].validate(valid => {\n                if (valid) {\n                    this.attributes.unshift(this.attributeForm)\n                    this.attributeVisiable = false\n                }\n            })\n        },\n        handleAttributeDelete(row) {\n            const index = this.attributes.indexOf(row)\n            this.attributes.splice(index, 1)\n        }\n    }\n}\n",null]}