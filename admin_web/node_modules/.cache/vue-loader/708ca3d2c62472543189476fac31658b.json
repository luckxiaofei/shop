{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/mall/order.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/mall/order.vue","mtime":1585976621979},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { detailOrder, listOrder, listChannel, refundOrder, shipOrder } from '@/api/order'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\nimport checkPermission from '@/utils/permission' // 权限判断函数\n\nconst statusMap = {\n  101: '未付款',\n  102: '用户取消',\n  103: '系统取消',\n  201: '已付款',\n  202: '申请退款',\n  203: '已退款',\n  301: '已发货',\n  401: '用户收货',\n  402: '系统收货'\n}\n\nexport default {\n  name: 'Order',\n  components: { Pagination },\n  filters: {\n    orderStatusFilter(status) {\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      list: [],\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        id: undefined,\n        name: undefined,\n        timeArray: [],\n        orderStatusArray: [],\n        sort: 'add_time',\n        order: 'desc'\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      statusMap,\n      orderDialogVisible: false,\n      orderDetail: {\n        order: {},\n        user: {},\n        orderGoods: []\n      },\n      shipForm: {\n        orderId: undefined,\n        shipChannel: undefined,\n        shipSn: undefined\n      },\n      shipDialogVisible: false,\n      refundForm: {\n        orderId: undefined,\n        refundMoney: undefined\n      },\n      refundDialogVisible: false,\n      downloadLoading: false,\n      channels: []\n    }\n  },\n  created() {\n    this.getList()\n    this.getChannel()\n  },\n  methods: {\n    checkPermission,\n    getList() {\n      this.listLoading = true\n      if (this.listQuery.timeArray.length === 2) {\n        this.listQuery.start = this.listQuery.timeArray[0]\n        this.listQuery.end = this.listQuery.timeArray[1]\n      }\n      listOrder(this.listQuery).then(response => {\n        this.list = response.data.data.list\n        this.total = response.data.data.total\n        this.listLoading = false\n      }).catch(() => {\n        this.list = []\n        this.total = 0\n        this.listLoading = false\n      })\n    },\n    getChannel() {\n      listChannel().then(response => {\n        this.channels = response.data.data\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    handleDetail(row) {\n      detailOrder(row.id).then(response => {\n        this.orderDetail = response.data.data\n      })\n      this.orderDialogVisible = true\n    },\n    handleShip(row) {\n      this.shipForm.orderId = row.id\n      this.shipForm.shipChannel = row.shipChannel\n      this.shipForm.shipSn = row.shipSn\n\n      this.shipDialogVisible = true\n      this.$nextTick(() => {\n        this.$refs['shipForm'].clearValidate()\n      })\n    },\n    confirmShip() {\n      this.$refs['shipForm'].validate((valid) => {\n        if (valid) {\n          shipOrder(this.shipForm).then(response => {\n            this.shipDialogVisible = false\n            this.$notify.success({\n              title: '成功',\n              message: '确认发货成功'\n            })\n            this.getList()\n          }).catch(response => {\n            this.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            })\n          })\n        }\n      })\n    },\n    handleRefund(row) {\n      this.refundForm.orderId = row.id\n      this.refundForm.refundMoney = row.actualPrice\n\n      this.refundDialogVisible = true\n      this.$nextTick(() => {\n        this.$refs['refundForm'].clearValidate()\n      })\n    },\n    confirmRefund() {\n      this.$refs['refundForm'].validate((valid) => {\n        if (valid) {\n          refundOrder(this.refundForm).then(response => {\n            this.refundDialogVisible = false\n            this.$notify.success({\n              title: '成功',\n              message: '确认退款成功'\n            })\n            this.getList()\n          }).catch(response => {\n            this.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            })\n          })\n        }\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['订单ID', '订单编号', '用户ID', '订单状态', '是否删除', '收货人', '收货联系电话', '收货地址']\n        const filterVal = ['id', 'orderSn', 'userId', 'orderStatus', 'isDelete', 'consignee', 'mobile', 'address']\n        excel.export_json_to_excel2(tHeader, this.list, filterVal, '订单信息')\n        this.downloadLoading = false\n      })\n    },\n    printOrder() {\n      this.$print(this.$refs.print)\n      this.orderDialogVisible = false\n    }\n  }\n}\n",null]}