{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/goods/edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/goods/edit.vue","mtime":1585976621969},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {detailGoods, editGoods, listCatAndBrand} from '@/api/goods'\nimport {createStorage, uploadPath} from '@/api/storage'\nimport Editor from '@tinymce/tinymce-vue'\nimport {MessageBox} from 'element-ui'\nimport {getToken} from '@/utils/auth'\n\nexport default {\n    name: 'GoodsEdit',\n    components: {Editor},\n    data() {\n        return {\n            uploadPath,\n            newKeywordVisible: false,\n            newKeyword: '',\n            keywords: [],\n            galleryFileList: [],\n            categoryList: [],\n            brandList: [],\n            categoryIds: [],\n            goods: {gallery: []},\n            specVisiable: false,\n            specForm: {specification: '', picUrl: ''},\n            specifications: [{specification: '标准', picUrl: ''}],\n            productVisiable: false,\n            productForm: {\n                id: 0,\n                specifications: [],\n                number: 0,\n                url: ''\n            },\n            products: [\n                {id: 0, specification: '标准', number: 0, url: ''}\n            ],\n            attributeVisiable: false,\n            attributeAdd: true,\n            attributeForm: {attribute: '', value: ''},\n            attributes: [],\n            rules: {\n                goodsSn: [{required: true, message: '商品编号不能为空', trigger: 'blur'}],\n                name: [{required: true, message: '商品名称不能为空', trigger: 'blur'}],\n                counterPrice: [{required: true, message: '原价不能为空', trigger: 'blur'}],\n                retailPrice: [{required: true, message: '实际销售价不能为空', trigger: 'blur'}],\n                convertScore: [{required: true, message: '兑换所需青豆不能为空', trigger: 'blur'}],\n                giveScore: [{required: true, message: '购买商品赠送青豆不能为空', trigger: 'blur'}],\n                commission: [{required: true, message: '购买商品返上级佣金不能为空', trigger: 'blur'}],\n                picUrl: [{required: true, message: '商品图片不能为空', trigger: 'blur'}],\n                gallery: [{required: true, message: '宣传画廊不能为空', trigger: 'blur'}],\n                unit: [{required: true, message: '商品单位不能为空', trigger: 'blur'}],\n                categoryId: [{required: true, message: '所属分类不能为空', trigger: 'blur'}],\n                brief: [{required: true, message: '所属分类不能为空', trigger: 'blur'}],\n            },\n            // specForm\n            specRules: {\n                specification: [{required: true, message: '规格名不能为空', trigger: 'blur'}],\n\n            },\n            //productForm\n            productRules: {\n                specification: [{required: true, message: '规格名不能为空', trigger: 'blur'}],\n                number: [{required: true, message: '货品数量不能为空', trigger: 'blur'}],\n            },\n            //attributeForm\n            attributeRules: {\n                attribute: [{required: true, message: '商品参数名称不能为空', trigger: 'blur'}],\n                value: [{required: true, message: '商品参数值不能为空', trigger: 'blur'}],\n            },\n            editorInit: {\n                language: 'zh_CN',\n                height: '400px',\n                convert_urls: false,\n                plugins: [\n                    'advlist anchor autolink autosave code codesample colorpicker colorpicker contextmenu directionality emoticons fullscreen hr image imagetools importcss insertdatetime link lists media nonbreaking noneditable pagebreak paste preview print save searchreplace spellchecker tabfocus table template textcolor textpattern visualblocks visualchars wordcount'\n                ],\n                toolbar: [\n                    'searchreplace bold italic underline strikethrough alignleft aligncenter alignright outdent indent  blockquote undo redo removeformat subscript superscript code codesample',\n                    'hr bullist numlist link image charmap preview anchor pagebreak insertdatetime media table emoticons forecolor backcolor fullscreen'\n                ],\n                images_upload_handler: function (blobInfo, success, failure) {\n                    const formData = new FormData()\n                    formData.append('file', blobInfo.blob())\n                    createStorage(formData)\n                        .then(res => {\n                            success(res.data.data.url)\n                        })\n                        .catch(() => {\n                            failure('上传失败，请重新上传')\n                        })\n                }\n            }\n        }\n    },\n    computed: {\n        headers() {\n            return {\n                'X-Litemall-Admin-Token': getToken()\n            }\n        },\n        attributesData() {\n            var attributesData = []\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].deleted) {\n                    continue\n                }\n                attributesData.push(this.attributes[i])\n            }\n            return attributesData\n        }\n    },\n    created() {\n        this.init()\n    },\n    methods: {\n        init: function () {\n            if (this.$route.query.id == null) {\n                return\n            }\n\n            const goodsId = this.$route.query.id\n            detailGoods(goodsId).then(response => {\n                this.goods = response.data.data.goods\n                // 稍微调整一下前后端不一致\n                if (this.goods.brandId === 0) {\n                    this.goods.brandId = null\n                }\n                if (this.goods.keywords === '') {\n                    this.goods.keywords = null\n                }\n                this.specifications = response.data.data.specifications\n                this.products = response.data.data.products\n                this.attributes = response.data.data.attributes\n                this.categoryIds = response.data.data.categoryIds\n\n                this.galleryFileList = []\n                for (var i = 0; i < this.goods.gallery.length; i++) {\n                    this.galleryFileList.push({\n                        url: this.goods.gallery[i]\n                    })\n                }\n                const keywords = response.data.data.goods.keywords\n                if (keywords !== null) {\n                    this.keywords = keywords.split(',')\n                }\n            })\n\n            listCatAndBrand().then(response => {\n                this.categoryList = response.data.data.categoryList\n                this.brandList = response.data.data.brandList\n            })\n        },\n        handleCategoryChange(value) {\n            this.goods.categoryId = value[value.length - 1]\n        },\n        handleCancel: function () {\n            this.$router.push({path: '/goods/list'})\n        },\n        handleEdit: function () {\n            const finalGoods = {\n                goods: this.goods,\n                specifications: this.specifications,\n                products: this.products,\n                attributes: this.attributes\n            }\n            if (this.specifications.length < 1) {\n                MessageBox.alert('请添加商品规格', '警告', {\n                    confirmButtonText: '确定',\n                    type: 'error'\n                })\n                return\n            }\n            if (this.products.length < 1) {\n                MessageBox.alert('请添加商品库存', '警告', {\n                    confirmButtonText: '确定',\n                    type: 'error'\n                })\n                return\n            }\n            this.$refs['goods'].validate(valid => {\n                if (valid) {\n                    editGoods(finalGoods)\n                        .then(response => {\n                            this.$notify.success({\n                                title: '成功',\n                                message: '创建成功'\n                            })\n                            this.$router.push({path: '/goods/list'})\n                        })\n                        .catch(response => {\n                            MessageBox.alert('业务错误：' + response.data.errmsg, '警告', {\n                                confirmButtonText: '确定',\n                                type: 'error'\n                            })\n                        })\n                }\n            })\n        },\n        handleClose(tag) {\n            this.keywords.splice(this.keywords.indexOf(tag), 1)\n            this.goods.keywords = this.keywords.toString()\n        },\n        showInput() {\n            this.newKeywordVisible = true\n            this.$nextTick(_ => {\n                this.$refs.newKeywordInput.$refs.input.focus()\n            })\n        },\n        handleInputConfirm() {\n            const newKeyword = this.newKeyword\n            if (newKeyword) {\n                this.keywords.push(newKeyword)\n                this.goods.keywords = this.keywords.toString()\n            }\n            this.newKeywordVisible = false\n            this.newKeyword = ''\n        },\n        uploadPicUrl: function (response) {\n            this.goods.picUrl = response.data.url\n        },\n        uploadOverrun: function () {\n            this.$message({\n                type: 'error',\n                message: '上传文件个数超出限制!最多上传5张图片!'\n            })\n        },\n        handleGalleryUrl(response, file, fileList) {\n            if (response.errno === 0) {\n                this.goods.gallery.push(response.data.url)\n            }\n        },\n        handleRemove: function (file, fileList) {\n            for (var i = 0; i < this.goods.gallery.length; i++) {\n                // 这里存在两种情况\n                // 1. 如果所删除图片是刚刚上传的图片，那么图片地址是file.response.data.url\n                //    此时的file.url虽然存在，但是是本机地址，而不是远程地址。\n                // 2. 如果所删除图片是后台返回的已有图片，那么图片地址是file.url\n                var url\n                if (file.response === undefined) {\n                    url = file.url\n                } else {\n                    url = file.response.data.url\n                }\n\n                if (this.goods.gallery[i] === url) {\n                    this.goods.gallery.splice(i, 1)\n                }\n            }\n        },\n        specChanged: function (label) {\n            if (label === false) {\n                this.specifications = [\n                    {specification: '规格', value: '标准', picUrl: ''}\n                ]\n                this.products = [\n                    {id: 0, specifications: ['标准'], number: 0, url: ''}\n                ]\n            } else {\n                this.specifications = []\n                this.products = []\n            }\n        },\n        uploadSpecPicUrl: function (response) {\n            this.specForm.picUrl = response.data.url\n        },\n        handleSpecificationShow(row) {\n            this.specForm = Object.assign({}, row)\n            this.specVisiable = true\n        },\n        handleSpecificationEdit() {\n            this.$refs['specForm'].validate(valid => {\n                if (valid) {\n                    this.specForm.updateTime = ''\n                    for (var i = 0; i < this.specifications.length; i++) {\n                        const v = this.specifications[i]\n                        if (v.id === this.specForm.id) {\n                            this.specifications.splice(i, 1, this.specForm)\n                            break\n                        }\n                    }\n                    for (var i = 0; i < this.products.length; i++) {\n                        const v = this.products[i]\n                        if (v.specificationId === this.specForm.id) {\n                            v.specification = this.specForm.specification\n                            this.products.splice(i, 1, v)\n                            break\n                        }\n                    }\n                    this.specVisiable = false\n                }\n            })\n        },\n        handleProductShow(row) {\n            this.productForm = Object.assign({}, row)\n            this.productVisiable = true\n        },\n        uploadProductUrl: function (response) {\n            this.productForm.url = response.data.url\n        },\n        handleProductEdit() {\n            this.$refs['productForm'].validate(valid => {\n                if (valid) {\n                    this.productForm.updateTime = ''\n                    for (var i = 0; i < this.products.length; i++) {\n                        const v = this.products[i]\n                        if (v.id === this.productForm.id) {\n                            this.products.splice(i, 1, this.productForm)\n                            break\n                        }\n                    }\n                    this.productVisiable = false\n                }\n            })\n        },\n        handleAttributeShow(row) {\n            if (row.id) {\n                this.attributeForm = Object.assign({}, row)\n                this.attributeAdd = false\n            } else {\n                this.attributeForm = {}\n                this.attributeAdd = true\n            }\n            this.attributeVisiable = true\n        },\n        handleAttributeAdd() {\n            this.attributes.unshift(this.attributeForm)\n            this.attributeVisiable = false\n        },\n        handleAttributeEdit() {\n            this.$refs['attributeForm'].validate(valid => {\n                if (valid) {\n                    // 这是一个trick，设置updateTime的值为空，告诉后端这个记录已编辑需要更新。\n                    this.attributeForm.updateTime = ''\n                    for (var i = 0; i < this.attributes.length; i++) {\n                        const v = this.attributes[i]\n                        if (v.id === this.attributeForm.id) {\n                            this.attributes.splice(i, 1, this.attributeForm)\n                            break\n                        }\n                    }\n                    this.attributeVisiable = false\n                }\n            })\n        },\n        handleAttributeDelete(row) {\n            row.deleted = true\n        }\n    }\n}\n",null]}