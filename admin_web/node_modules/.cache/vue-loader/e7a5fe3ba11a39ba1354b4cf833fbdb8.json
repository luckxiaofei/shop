{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/promotion/scoreRule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/promotion/scoreRule.vue","mtime":1585976621984},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {listRule,updateRule} from '@/api/userProperty'\nimport BackToTop from '@/components/BackToTop'\nimport Pagination from '@/components/Pagination' // Secondary package based on el-pagination\n\n\nexport default {\n    name: 'ScoreRule',\n    components: {BackToTop, Pagination},\n    data() {\n        return {\n            list: [],\n            total: 0,\n            listLoading: true,\n            listQuery: {\n                page: 1,\n                limit: 20,\n                ruleType: undefined,\n                sort: 'add_time',\n                order: 'desc'\n            },\n            downloadLoading: false,\n            dataForm: {\n                id: undefined,\n                score: '',\n                type: '',\n                typeName: '',\n            },\n            dialogFormVisible: false,\n            dialogStatus: '',\n            textMap: {\n                update: '编辑',\n                create: '创建'\n            },\n            //类型（1分享群，2分享好友，3浏览商品，4广告）\n            ruleTypeMap: {\n                1: '分享群',\n                2: '分享好友',\n                3: '浏览商品',\n                4: '广告'\n            },\n            ruleTypeOptions: [{\n                value: '1',\n                label: '分享群'\n            }, {\n                value: '2',\n                label: '分享好友'\n            }, {\n                value: '3',\n                label: '浏览商品'\n            }, {\n                value: '4',\n                label: '广告'\n            }],\n            rules: {\n                goodsId: [{required: true, message: '商品不能为空', trigger: 'blur'}],\n                score: [{required: true, message: '团购折扣不能为空', trigger: 'blur'}],\n                type: [{required: true, message: '团购人数不能为空', trigger: 'blur'}],\n                expireTime: [{required: true, message: '过期时间不能为空', trigger: 'blur'}]\n            }\n        }\n    },\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            this.listLoading = true\n            listRule(this.listQuery).then(response => {\n                this.list = response.data.data.list\n                this.total = response.data.data.total\n                this.listLoading = false\n            }).catch(() => {\n                this.list = []\n                this.total = 0\n                this.listLoading = false\n            })\n        },\n        handleFilter() {\n            this.listQuery.page = 1\n            this.getList()\n        },\n        resetForm() {\n            this.dataForm = {\n                id: undefined,\n                goodsId: '',\n                score: '',\n                type: '',\n                expireTime: undefined\n            }\n        },\n        // handleCreate() {\n        //     this.resetForm()\n        //     this.dialogStatus = 'create'\n        //     this.dialogFormVisible = true\n        //     this.$nextTick(() => {\n        //         this.$refs['dataForm'].clearValidate()\n        //     })\n        // },\n        // createData() {\n        //     this.$refs['dataForm'].validate((valid) => {\n        //         if (valid) {\n        //             publishGroupon(this.dataForm).then(response => {\n        //                 this.list.unshift(response.data.data)\n        //                 this.dialogFormVisible = false\n        //                 this.$notify.success({\n        //                     title: '成功',\n        //                     message: '创建团购规则成功'\n        //                 })\n        //             }).catch(response => {\n        //                 this.$notify.error({\n        //                     title: '失败',\n        //                     message: response.data.errmsg\n        //                 })\n        //             })\n        //         }\n        //     })\n        // },\n        handleUpdate(row) {\n            this.dataForm = Object.assign({}, row)\n            this.dataForm.typeName = this.ruleTypeMap[row.type]\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateData() {\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    updateRule(this.dataForm).then(() => {\n                        for (const v of this.list) {\n                            if (v.id === this.dataForm.id) {\n                                const index = this.list.indexOf(v)\n                                this.list.splice(index, 1, this.dataForm)\n                                break\n                            }\n                        }\n                        this.dialogFormVisible = false\n                        this.$notify.success({\n                            title: '成功',\n                            message: '更新积分规则成功'\n                        })\n                    }).catch(response => {\n                        this.$notify.error({\n                            title: '失败',\n                            message: response.data.errmsg\n                        })\n                    })\n                }\n            })\n        },\n        // handleDelete(row) {\n        //     deleteGroupon(row).then(response => {\n        //         this.$notify.success({\n        //             title: '成功',\n        //             message: '删除团购规则成功'\n        //         })\n        //         const index = this.list.indexOf(row)\n        //         this.list.splice(index, 1)\n        //     }).catch(response => {\n        //         this.$notify.error({\n        //             title: '失败',\n        //             message: response.data.errmsg\n        //         })\n        //     })\n        // },\n        // handleDownload() {\n        //     this.downloadLoading = true\n        //     import('@/vendor/Export2Excel').then(excel => {\n        //         const tHeader = ['商品ID', '名称', '首页主图', '折扣', '人数要求', '活动开始时间', '活动结束时间']\n        //         const filterVal = ['id', 'name', 'pic_url', 'score', 'type', 'addTime', 'expireTime']\n        //         excel.export_json_to_excel2(tHeader, this.list, filterVal, '商品信息')\n        //         this.downloadLoading = false\n        //     })\n        // }\n    }\n}\n",null]}