{"remainingRequest":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/luck/shop/admin_web/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/luck/shop/admin_web/src/views/login/index.vue","mtime":1585976621976},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luck/shop/admin_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Login',\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value.length < 6) {\n        callback(new Error('管理员密码长度应大于6'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      loginForm: {\n        username: 'admin123',\n        password: 'admin123'\n      },\n      loginRules: {\n        username: [{ required: true, message: '管理员账户不允许为空', trigger: 'blur' }],\n        password: [\n          { required: true, message: '管理员密码不允许为空', trigger: 'blur' },\n          { validator: validatePassword, trigger: 'blur' }\n        ]\n      },\n      passwordType: 'password',\n      loading: false\n    }\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.redirect = route.query && route.query.redirect\n      },\n      immediate: true\n    }\n\n  },\n  created() {\n    // window.addEventListener('hashchange', this.afterQRScan)\n  },\n  destroyed() {\n    // window.removeEventListener('hashchange', this.afterQRScan)\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid && !this.loading) {\n          this.loading = true\n          this.$store.dispatch('LoginByUsername', this.loginForm).then(() => {\n            this.loading = false\n            this.$router.push({ path: this.redirect || '/' })\n          }).catch(response => {\n            this.$notify.error({\n              title: '失败',\n              message: response.data.errmsg\n            })\n            this.loading = false\n          })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n",null]}