<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fei.shop.mapper.UserDao">
  <resultMap id="BaseResultMap" type="com.fei.shop.entities.po.User">
    <id column="user_id" jdbcType="INTEGER" property="id" />
    <result column="user_title" jdbcType="VARCHAR" property="title" />
    <result column="user_content" jdbcType="VARCHAR" property="content" />
    <result column="user_admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="user_add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="user_update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_deleted" jdbcType="BOOLEAN" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    user.id as user_id, user.title as user_title, user.content as user_content, user.admin_id as user_admin_id,
    user.add_time as user_add_time, user.update_time as user_update_time, user.deleted as user_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from admin_notice user
    where user.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fei.shop.entities.po.User" useGeneratedKeys="true">
    insert into admin_notice (title, content, admin_id,
      add_time, update_time, deleted
      )
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{adminId,jdbcType=INTEGER},
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BOOLEAN}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fei.shop.entities.po.User" useGeneratedKeys="true">
    insert into admin_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fei.shop.entities.po.User">
    update admin_notice
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BOOLEAN},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fei.shop.entities.po.User">
    update admin_notice
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
